using System;
using System.Collections.Generic;
using System.Text;
using ISAAR.MSolve.LinearAlgebra.Matrices;

namespace MGroup.Tests.DDM.UnitTests.PFetiDP
{
	public static class Example4x4ExpectedResults
	{
		#region mapping matrices
		public static Matrix GetMatrixLprHomogeneous(int s)
		{
			Matrix Lpr;
			if (s == 0)
			{
				Lpr = Matrix.CreateZero(8, 16);
				Lpr[4, 0] = 0.5;
				Lpr[5, 1] = 0.5;
				Lpr[6, 4] = 0.5;
				Lpr[7, 5] = 0.5;
			}
			else if (s == 1)
			{
				Lpr = Matrix.CreateZero(8, 16);
				Lpr[0, 0] = 0.5;
				Lpr[1, 1] = 0.5;
				Lpr[6, 8] = 0.5;
				Lpr[7, 9] = 0.5;
			}
			else if (s == 2)
			{
				Lpr = Matrix.CreateZero(12, 16);
				Lpr[0, 4] = 0.5;
				Lpr[1, 5] = 0.5;
				Lpr[6, 12] = 0.5;
				Lpr[7, 13] = 0.5;
			}
			else if (s == 3)
			{
				Lpr = Matrix.CreateZero(12, 16);
				Lpr[0, 8] = 0.5;
				Lpr[1, 9] = 0.5;
				Lpr[2, 12] = 0.5;
				Lpr[3, 13] = 0.5;
			}
			else
			{
				throw new ArgumentException();
			}
			return Lpr;
		}

		public static Matrix GetMatrixLprHeterogeneous(int s)
		{
			Matrix Lpr;
			if (s == 0)
			{
				Lpr = Matrix.CreateZero(8, 16);
				Lpr[4, 0] = 0.5;
				Lpr[5, 1] = 0.5;
				Lpr[6, 4] = 0.5;
				Lpr[7, 5] = 0.5;
			}
			else if (s == 1)
			{
				Lpr = Matrix.CreateZero(8, 16);
				Lpr[0, 0] = 0.5;
				Lpr[1, 1] = 0.5;
				Lpr[6, 8] = 0.5;
				Lpr[7, 9] = 0.5;
			}
			else if (s == 2)
			{
				Lpr = Matrix.CreateZero(12, 16);
				Lpr[0, 4] = 0.5;
				Lpr[1, 5] = 0.5;
				Lpr[6, 12] = 0.5;
				Lpr[7, 13] = 0.5;
			}
			else if (s == 3)
			{
				Lpr = Matrix.CreateZero(12, 16);
				Lpr[0, 8] = 0.5;
				Lpr[1, 9] = 0.5;
				Lpr[2, 12] = 0.5;
				Lpr[3, 13] = 0.5;
			}
			else
			{
				throw new ArgumentException();
			}
			return Lpr;
		}

		public static Matrix GetMatrixNrb(int s)
		{
			Matrix Nrb;
			if (s == 0)
			{
				Nrb = Matrix.CreateZero(8, 8);
				Nrb[4, 0] = 1;
				Nrb[5, 1] = 1;
				Nrb[6, 4] = 1;
				Nrb[7, 5] = 1;
			}
			else if (s == 1)
			{
				Nrb = Matrix.CreateZero(8, 8);
				Nrb[0, 0] = 1;
				Nrb[1, 1] = 1;
				Nrb[6, 4] = 1;
				Nrb[7, 5] = 1;
			}
			else if (s == 2)
			{
				Nrb = Matrix.CreateZero(12, 10);
				Nrb[0, 2] = 1;
				Nrb[1, 3] = 1;
				Nrb[6, 6] = 1;
				Nrb[7, 7] = 1;
			}
			else if (s == 3)
			{
				Nrb = Matrix.CreateZero(12, 10);
				Nrb[0, 2] = 1;
				Nrb[1, 3] = 1;
				Nrb[2, 6] = 1;
				Nrb[3, 7] = 1;
			}
			else
			{
				throw new ArgumentException();
			}
			return Nrb;
		}

		public static Matrix GetMatrixNcb()
		{
			Matrix Ncb;
			Ncb = Matrix.CreateZero(16, 8);
			Ncb[2, 0] = 1;
			Ncb[3, 1] = 1;
			Ncb[6, 2] = 1;
			Ncb[7, 3] = 1;
			Ncb[10, 4] = 1;
			Ncb[11, 5] = 1;
			Ncb[14, 6] = 1;
			Ncb[15, 7] = 1;
			return Ncb;
		}
		#endregion

		public static Matrix GetPreconditioner()
		{
			var preconditioner = Matrix.CreateFromArray(new double[16, 16]
			{
				{ 3.30294281933053E-08, 1.65436122510606E-24, 5.22356759551575E-09, -1.38654673791938E-09, 1.11074485779855E-08, -3.43827654777517E-09, 1.7913104971736E-08, -1.65436122510606E-24, 1.11074485779855E-08, 3.43827654777517E-09, 5.22356759551577E-09, 1.38654673791938E-09, 1.41870009693258E-08, -6.61744490042422E-24, 1.20743570927224E-08, -8.27180612553028E-24 },
				{ 5.16987882845642E-24, 5.4285001550049E-08, 1.29719467492955E-08, 4.54800818584402E-08, 9.32855360777881E-10, 4.53448844864009E-08, 6.61744490042422E-24, 4.08722889293113E-08, -9.32855360777854E-10, 4.53448844864009E-08, -1.29719467492955E-08, 4.54800818584403E-08, 1.69572025573371E-23, 4.99389800657077E-08, 2.15066959263787E-23, 5.68032779591255E-08 },
				{ 5.22356759551577E-09, 1.29719467492955E-08, 1.50968477962072E-07, 6.47351877732407E-08, 5.36837136546031E-08, 5.09248894870443E-08, 1.74360720204402E-08, 4.13268867804471E-08, -6.14871755730037E-09, 4.23627777896791E-08, -3.71921703598148E-08, 4.60559272413587E-08, 3.03717962743483E-08, 9.62465844623254E-08, 3.75973155336063E-08, 1.44441859883248E-07 },
				{ -1.38654673791937E-09, 4.54800818584402E-08, 6.47351877732407E-08, 1.75999001764222E-07, 2.79642150853691E-08, 1.241138321893E-07, 8.53170378636458E-09, 9.23447933265361E-08, -1.00701878405769E-08, 8.15991339096472E-08, -4.60559272413586E-08, 8.13364805253361E-08, 2.146248299374E-08, 1.40386211222696E-07, 2.77715626644859E-08, 1.71066298852853E-07 },
				{ 1.11074485779855E-08, 9.32855360777873E-10, 5.36837136546031E-08, 2.7964215085369E-08, 7.03728662568346E-08, 1.85563910996112E-08, 2.35772158260649E-08, 1.17391710628791E-08, 7.36205950964979E-09, 1.05160523057548E-08, -6.14871755730037E-09, 1.00701878405769E-08, 3.90172234080064E-08, 3.53842627862182E-08, 4.11869038243961E-08, 5.52290144386506E-08 },
				{ -3.43827654777516E-09, 4.53448844864009E-08, 5.09248894870443E-08, 1.241138321893E-07, 1.85563910996113E-08, 1.3417609725373E-07, 3.74529254289762E-09, 9.60875088369762E-08, -1.05160523057548E-08, 8.30902573418117E-08, -4.2362777789679E-08, 8.15991339096472E-08, 1.34126591470255E-08, 1.31983167689731E-07, 1.64309483229392E-08, 1.52413653480111E-07 },
				{ 1.7913104971736E-08, -4.75628852217991E-24, 1.74360720204402E-08, 8.53170378636455E-09, 2.35772158260649E-08, 3.74529254289759E-09, 5.65830969778524E-08, -1.43702843106894E-23, 2.3577215826065E-08, -3.74529254289762E-09, 1.74360720204402E-08, -8.53170378636459E-09, 4.85297754266665E-08, -2.80498724791051E-23, 4.36864380252945E-08, -4.00844091287231E-23 },
				{ 1.07533479631894E-23, 4.08722889293113E-08, 4.13268867804471E-08, 9.23447933265361E-08, 1.17391710628791E-08, 9.60875088369762E-08, 1.65436122510606E-23, 1.14203970609159E-07, -1.1739171062879E-08, 9.60875088369762E-08, -4.1326886780447E-08, 9.23447933265361E-08, 4.12827915895733E-23, 1.22624596681387E-07, 5.5889807287632E-23, 1.41493284349433E-07 },
				{ 1.11074485779855E-08, -9.32855360777867E-10, -6.14871755730038E-09, -1.00701878405769E-08, 7.36205950964978E-09, -1.05160523057548E-08, 2.3577215826065E-08, -1.1739171062879E-08, 7.03728662568346E-08, -1.85563910996112E-08, 5.36837136546031E-08, -2.7964215085369E-08, 3.90172234080064E-08, -3.53842627862182E-08, 4.11869038243961E-08, -5.52290144386505E-08 },
				{ 3.43827654777518E-09, 4.53448844864009E-08, 4.23627777896791E-08, 8.15991339096472E-08, 1.05160523057548E-08, 8.30902573418117E-08, -3.74529254289759E-09, 9.60875088369762E-08, -1.85563910996112E-08, 1.3417609725373E-07, -5.09248894870442E-08, 1.241138321893E-07, -1.34126591470254E-08, 1.31983167689731E-07, -1.64309483229391E-08, 1.52413653480111E-07 },
				{ 5.22356759551576E-09, -1.29719467492955E-08, -3.71921703598148E-08, -4.60559272413586E-08, -6.14871755730039E-09, -4.23627777896791E-08, 1.74360720204402E-08, -4.1326886780447E-08, 5.3683713654603E-08, -5.09248894870442E-08, 1.50968477962071E-07, -6.47351877732406E-08, 3.03717962743482E-08, -9.62465844623253E-08, 3.75973155336062E-08, -1.44441859883248E-07 },
				{ 1.38654673791939E-09, 4.54800818584403E-08, 4.60559272413587E-08, 8.13364805253361E-08, 1.00701878405769E-08, 8.15991339096472E-08, -8.53170378636455E-09, 9.23447933265361E-08, -2.7964215085369E-08, 1.241138321893E-07, -6.47351877732406E-08, 1.75999001764222E-07, -2.14624829937399E-08, 1.40386211222696E-07, -2.77715626644858E-08, 1.71066298852853E-07 },
				{ 1.41870009693258E-08, 2.8951321439356E-24, 3.03717962743483E-08, 2.14624829937399E-08, 3.90172234080064E-08, 1.34126591470254E-08, 4.85297754266665E-08, 5.79026428787119E-24, 3.90172234080065E-08, -1.34126591470254E-08, 3.03717962743483E-08, -2.14624829937399E-08, 9.85360669832765E-08, 7.85821581925376E-24, 8.73560828205482E-08, 1.32348898008484E-23 },
				{ 1.32348898008484E-23, 4.99389800657077E-08, 9.62465844623254E-08, 1.40386211222696E-07, 3.53842627862182E-08, 1.31983167689731E-07, 2.10931056201022E-23, 1.22624596681387E-07, -3.53842627862181E-08, 1.31983167689731E-07, -9.62465844623252E-08, 1.40386211222696E-07, 6.61744490042422E-23, 2.46536880158153E-07, 9.0989867380833E-23, 2.78613211673175E-07 },
				{ 1.20743570927224E-08, 9.92616735063633E-24, 3.75973155336063E-08, 2.77715626644859E-08, 4.11869038243961E-08, 1.64309483229392E-08, 4.36864380252945E-08, 2.65620880951158E-23, 4.11869038243961E-08, -1.64309483229391E-08, 3.75973155336063E-08, -2.77715626644858E-08, 8.73560828205482E-08, 3.73431184165182E-23, 1.38025474235373E-07, 4.91750616264903E-23 },
				{ 1.48892510259545E-23, 5.68032779591256E-08, 1.44441859883248E-07, 1.71066298852853E-07, 5.52290144386506E-08, 1.52413653480111E-07, 2.48154183765908E-23, 1.41493284349434E-07, -5.52290144386504E-08, 1.52413653480111E-07, -1.44441859883248E-07, 1.71066298852853E-07, 8.90476493837674E-23, 2.78613211673175E-07, 1.19425149664334E-22, 4.37197310619828E-07 }
			});
			return preconditioner;
		}

	}
}
